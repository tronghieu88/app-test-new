# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserResult {
  results: [User!]
  totalCount: Float
}

type User {
  _id: ID!
  mail: String!
  password: String!
  userName: String
  phoneNumber: String
  age: Float
  description: String
  createdAt: DateTime!
  isDeleted: Boolean!
  keyword: String!
  updatedAt: DateTime!
  slug: String!
  role: String!
  isConfirmMail: Boolean!
  codeMail: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type JwtPayload {
  accessToken: String!
  refreshToken: String!
}

type ProductResult {
  results: [Product!]
  totalCount: Float
}

type Product {
  productId: ID!
  productName: String!
  quantity: Float
  price: Float
  urlImage: [String!]
  discount: Float
  description: String!
  colors: [String!]
  rating: Float
  isDeleted: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  slug: String!
  keyword: String!
}

type Query {
  test: String!
  getAllUser: UserResult!
  findOne(findOneUser: String): User!
  sortUserName(
    """
    Sort A-Z: 1 
    Sort Z-A: -1
    """
    option: Float!
  ): UserResult!
  getCurrentUser: User!
  getSession: Boolean!
  forgotPassword(mail: String!): Boolean!
  confirmMail(email: String!, code: String!): Boolean!
  test1: String!
  findProduct(productName: String!): Product!
  findWithProductName(input: String!): ProductResult!
  getAllProduct: ProductResult!
  sortProduct(input: SortProduct!, option: Float!): ProductResult!
}

enum SortProduct {
  ProductId
  Price
  Discount
  Quantity
}

type Mutation {
  testMutation: String!
  createUser(userInput: UserInput!): User!
  deleteOne(Delete: UserInput): Boolean!
  updateOne(email: String!, userInput: UserInput!): Boolean!
  updateCurrentUser(updateCurrentUser: UpdateCurrentUser!): Boolean!
  confirmCode(code: String!): Boolean!
  onlyChangePassword(input: ChangePasswordInput!): Boolean!
  signIn(input: LoginInput!): JwtPayload!
  signUp(input: RegisterInput!): Boolean!
  changePassword(code: String!, newPassword: String!, reNewPassword: String!): Boolean!
  createProduct(productInput: ProductInput!): Product!
  deleteProduct(productID: ProductInput): Boolean!
  updateProduct(productId: String!, productInput: ProductInput!): Boolean!
}

input UserInput {
  mail: String
  password: String
  userName: String
  phoneNumber: String
  age: Float
  description: String
  role: RoleEnum
}

enum RoleEnum {
  USER
  ADMIN
  GUEST
}

input UpdateCurrentUser {
  userName: String
  phoneNumber: String
  age: Float
  description: String
  role: RoleEnum
}

input ChangePasswordInput {
  mail: String!
  curentPassword: String!
  newPassword: String!
  reNewPassword: String!
}

input LoginInput {
  mail: String!
  password: String!
}

input RegisterInput {
  mail: String!
  password: String!
  confirmPassword: String!
  userName: String
  phoneNumber: String
}

input ProductInput {
  productId: String!
  productName: String
  quantity: Float
  price: Float
  urlImage: [String!]
  discount: Float
  description: String
  colors: [String!]
  rating: Float
}